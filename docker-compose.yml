# Specifies which syntax version of Docker compose
version: "3.9"
   
# Build a multiservice arhitecture.
services:
  auth_db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=auth
      - POSTGRES_USER=auth
      - POSTGRES_PASSWORD=auth
    ports:
      - "5430:5430"
    command: -p 5430
  api_db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
    ports:
      - "5431:5431"
    command: -p 5431
    depends_on:
      - auth_db
  cache:
    image: memcached
    command: ["-m", "64"]
    ports:
      - "11211:11211"
    depends_on:
      - api_db
  auth:
    build: .
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./auth:/code
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_NAME=auth
      - POSTGRES_USER=auth
      - POSTGRES_PASSWORD=auth
    depends_on:
      - cache
  api:
  # Build an image from the files in the project root directory (Dockerfile)
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    # Mount the container `/code` folder to the a `.` folder in the location
    # of the Dockerfile on the host machine.
    volumes:
      - ./service:/code
    # Map port 8000 to port 9090 so that we can access the application on
    # our host machine by visiting 127.0.0.1:9090
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=api
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_AUTH_NAME=auth
      - POSTGRES_AUTH_USER=auth
      - POSTGRES_AUTH_PASSWORD=auth
    depends_on:
      - auth